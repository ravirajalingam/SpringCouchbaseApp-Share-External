buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        mavenCentral()
       
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: 'maven'

group = 'org.aexp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
   
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator:2.0.1.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-data-couchbase:2.0.1.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-data-couchbase-reactive:2.0.1.RELEASE')
    compile('com.couchbase.client:java-client:2.5.7')
    compile('org.springframework.boot:spring-boot-starter-web:2.0.1.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-security:2.0.1.RELEASE')
    compile('org.projectlombok:lombok:1.16.20')
    runtime('org.springframework.boot:spring-boot-devtools:2.0.1.RELEASE')
    testCompile('org.springframework.boot:spring-boot-starter-test:2.0.1.RELEASE')
    testCompile('junit:junit:4.12')
}

test {
    testLogging {
        // Show that tests are run in the command-line output
        events 'started', 'passed'
    }
    afterSuite { desc, result ->
        if (!desc.parent)
            println("${result.resultType} " +
                    "(${result.testCount} tests, " +
                    "${result.successfulTestCount} successes, " +
                    "${result.failedTestCount} failures, " +
                    "${result.skippedTestCount} skipped)")
    }
}
/*
task createPom {
    doLast {
        pom {
            project {
                groupId 'org.aexp.springbootcouchbase'
                artifactId 'SpringBootCouchbaseApp'
                version '1.0.0-SNAPSHOT'
                inceptionYear '2008'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
            }
        }.writeTo("pom.xml")
    }
}*/

task(run, dependsOn: 'classes', type: JavaExec) {
    main = 'org.aexp.springbootcouchbase.SpringbootcouchbaseApplication'
    classpath = sourceSets.main.runtimeClasspath
}
